#BlueJ class context
comment0.target=MauMauRunde
comment0.text=\r\n\ Eine\ Mau-Mau-Runde\ besteht\ hier\ aus\ drei\ Spielern\ und\ einem\ Kartensatz32\ (32\ Karten).\r\n\ In\ einer\ Mau-Mau-Runde\ werden\ mehrere\ Spiele\ gespielt.\ <br>\r\n\ In\ einem\ einzelnen\ Spiel\ wird\ bzw.\ werden\ nacheinander\:\ <br>\r\n\ -\ an\ jeden\ Spieler\ f\u00FCnf\ Karten\ verteilt;\ <br>\r\n\ -\ von\ den\ restlichen\ Karten\ die\ oberste\ aufgedeckt;\ <br>\r\n\ -\ von\ jedem\ Spieler\ reihum\ eine\ zur\ obersten\ Karte\ passende\ Karte\ abgelegt,\ \r\n\ \ \ bis\ ein\ Spieler\ keine\ Karten\ mehr\ hat.\ <br>\r\n\ Eine\ Karte\ "passt",\ wenn\ sie\ die\ gleiche\ Kartenfarbe\ oder\ den\ gleichen\ Kartenrang\ \r\n\ wie\ die\ oberste\ Karte\ hat.<br>\r\n\ Hat\ ein\ Spieler\ keine\ passende\ Karte,\ wenn\ er\ an\ der\ Reihe\ ist,\ muss\ er\ eine\ weitere\r\n\ Karte\ vom\ Kartenstapel\ ziehen.<br>\r\n\ \r\n\ @author\ Axel\ Schmolitzky\ \r\n\ @version\ 2022\r\n
comment1.params=
comment1.target=MauMauRunde()
comment1.text=\r\n\ Eine\ Mau-Mau-Runde\ besteht\ aus\ einem\ Kartensatz32\ \r\n\ (32\ Karten)\ und\ drei\ Spielern.\r\n\ Anfangs\ haben\ alle\ Spieler\ noch\ keine\ Karten.\r\n
comment10.params=
comment10.target=Spieler\ spieler1()
comment10.text=\r\n\ Liefert\ Spieler\ 1\ dieser\ Runde.\r\n
comment11.params=
comment11.target=Spieler\ spieler2()
comment11.text=\r\n\ Liefert\ Spieler\ 2\ dieser\ Runde.\r\n
comment12.params=
comment12.target=Spieler\ spieler3()
comment12.text=\r\n\ Liefert\ Spieler\ 3\ dieser\ Runde.\r\n
comment2.params=
comment2.target=Kartenstapel\ kartenVerteilen()
comment2.text=\r\n\ Karten\ verteilen\:\ Jeder\ Spieler\ erh\u00E4lt\ f\u00FCnf\ Karten.\r\n\ Die\ restlichen\ Karten\ werden\ als\ Ergebnis\ geliefert.\r\n
comment3.params=
comment3.target=void\ spielenBisGewinnerErmittelt()
comment3.text=\r\n\ Diese\ Methode\ simuliert\ ein\ Spiel\ in\ einer\ Mau-Mau-Runde.\r\n
comment4.params=ablage\ obersteKarte\ stapel
comment4.target=Spielkarte\ eineRundeSpielen(Kartenansicht,\ Spielkarte,\ Kartenstapel)
comment4.text=\r\n\ Jeder\ Spieler\ bekommt\ Gelegenheit,\ eine\ Karte\ abzulegen,\ es\ sei\ denn,\r\n\ ein\ Spieler\ legt\ seine\ letzte\ Karte\ ab.\ Liefert\ als\ Ergebnis\ die\r\n\ zuletzt\ abgelegte\ Spielkarte.\ Wenn\ ein\ Spieler\ nicht\ bedienen\ kann,\r\n\ muss\ er\ eine\ frische\ Karte\ vom\ Stapel\ ziehen.\r\n\ @param\ ablage\ die\ Kartenansicht,\ die\ die\ zuletzt\ abgelegte\ Karte\ zeigt.\r\n\ @param\ obersteKarte\ die\ zuletzt\ abgelegte\ Karte.\r\n\ @param\ stapel\ der\ Stapel\ mit\ den\ "frischen"\ Karten,\ falls\ ein\ Spieler\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ nicht\ bedienen\ kann.\r\n
comment5.params=spieler\ ansicht\ oberste\ stapel
comment5.target=Spielkarte\ obersteKarteDurch(Spieler,\ Kartenansicht,\ Spielkarte,\ Kartenstapel)
comment6.params=
comment6.target=void\ zdb()
comment7.params=
comment7.target=boolean\ jederSpielerHatNochMindestensEineKarte()
comment8.params=
comment8.target=Spieler\ gewinnerErmitteln()
comment8.text=\r\n\ Liefert\ w\u00E4hrend\ eines\ Spiels\ den\ Spieler,\ der\ als\ erster\ \r\n\ keine\ Karten\ mehr\ hat.\r\n
comment9.params=
comment9.target=void\ kartenEinsammeln()
comment9.text=\r\n\ Alle\ Karten\ einsammeln,\ damit\ neu\ verteilt\ werden\ kann.\r\n
numComments=13
